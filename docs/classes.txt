@startuml
interface Committer
interface Queuer
interface Sequencer
interface Mapper
interface SparseTree
interface Appender

KeyServer o-- Committer
KeyServer o-- Queuer
KeyServer o-- Mapper : Verify
KeyServer o-- SparseTree
KeyServer o-- Appender

Signer o-- Sequencer
Signer o-- Appender
Signer o-- Mapper : Mutate
Signer o-- SparseTree
Signer : Sequence(index, mutation)
Signer : CreateEpoch()

'SparseTreeHist <|-- SparseTree
'HashChain <|-- Appender
'CTLog <|-- Appender

SparseTree : ReadRoot() []byte
SparseTree : ReadLeaf(index []byte) []byte
SparseTree : WriteLeaf(index, leaf []byte)
SparseTree : Neighbors(index []byte) [][]byte

'MemDB <|-- Queuer
'MemDB <|-- Sequencer
'MemDB <|-- Committer
'MemDB : QueueMutation(index, mutation)
'MemDB : Queue() <- {Index, Mutation, Done}
'MemDB : WriteCommitment(commitment, key, value)
'MemDB : ReadCommitment(commitment) {key, value}

KeyServer : GetEntry(email)
KeyServer : UpdateEntry(email, mutation)

Committer : WriteCommitment(commitment, key, value)
Committer : ReadCommitment(commitment) {key, value}

Queuer : QueueMutation(index, mutation)

Mapper : CheckMutation(value, mutation)
Mapper : Mutate(value, mutation)

Sequencer : Queue() <-chan Mutation

Appender : Append(timestamp int64, data []byte)
Appender : GetByIndex(index int64) []byte
Appender : GetByTimeStamp(timestamp int64) []byte
Appender : Latest() int64

@enduml
